from decimal import Decimal

CITY_ZONES = {
    # Зона 1
    'москва': 1,
    'санкт-петербург': 1,

    # Зона 2
    'балашиха': 2,
    'бутоово': 2,
    'видное': 2,
    'волоколамск': 2,
    'дмитров': 2,
    'долгопрудный': 2,
    'дубна': 2,
    'железнодорожный': 2,
    'жуковский': 2,
    'звенигород': 2,
    'зеленоград': 2,
    'истра': 2,
    'клин': 2,
    'кожухово': 2,
    'коломна': 2,
    'королев': 2,
    'красногорск': 2,
    'лобня': 2,
    'люберцы': 2,
    'митино': 2,
    'можайск': 2,
    'московский': 2,
    'мытищи': 2,
    'ногинск': 2,
    'одинцово': 2,
    'орехово-зуево': 2,
    'подольск': 2,
    'пушкино': 2,
    'раменское': 2,
    'румянцево': 2,
    'сергиев посад': 2,
    'серпухов': 2,
    'солнечногорск': 2,
    'солнцево': 2,
    'ступино': 2,
    'троицк': 2,
    'химки': 2,
    'чехов': 2,
    'электросталь': 2,

    # Зона 3
    'аксай': 3,
    'александров': 3,
    'анапа': 3,
    'арзамас': 3,
    'балахна': 3,
    'батайск': 3,
    'белгород': 3,
    'боровичи': 3,
    'брянск': 3,
    'великие луки': 3,
    'великий новгород': 3,
    'владимир': 3,
    'волгоград': 3,
    'вологда': 3,
    'воронеж': 3,
    'волгодонск': 3,
    'волжский': 3,
    'выборг': 3,
    'гатчина': 3,
    'геленджик': 3,
    'губкин': 3,
    'дзержинск': 3,
    'дмитровград': 3,
    'зерноград': 3,
    'иваново': 3,
    'казань': 3,
    'калуга': 3,
    'каменск-шахтинский': 3,
    'кингисепп': 3,
    'кириши': 3,
    'колпино': 3,
    'кострома': 3,
    'краснодар': 3,
    'курск': 3,
    'лабинск': 3,
    'липецк': 3,
    'людиново': 3,
    'муром': 3,
    'нижний новгород': 3,
    'новошахтинск': 3,
    'обнинск': 3,
    'орел': 3,
    'псков': 3,
    'ростов-на-дону': 3,
    'рыбинск': 3,
    'рязань': 3,
    'самара': 3,
    'саров': 3,
    'сосновый бор': 3,
    'смоленск': 3,
    'старый оскол': 3,
    'сызрань': 3,
    'таганрог': 3,
    'тамбов': 3,
    'тихвин': 3,
    'тверь': 3,
    'тольятти': 3,
    'тула': 3,
    'ульяновск': 3,
    'чебоксары': 3,
    'череповец': 3,
    'ярославль': 3,

    # Зона 4
    'альметьевск': 4,
    'армавир': 4,
    'астрахань': 4,
    'балаково': 4,
    'березники': 4,
    'владикавказ': 4,
    'георгиевск': 4,
    'глазов': 4,
    'екатеринбург': 4,
    'ессентуки': 4,
    'зеленодольск': 4,
    'златоуст': 4,
    'ижевск': 4,
    'йошкар-ола': 4,
    'калининград': 4,
    'киров': 4,
    'кисловодск': 4,
    'копейск': 4,
    'кунгур': 4,
    'курган': 4,
    'нижняя тура': 4,
    'магнитогорск': 4,
    'майкоп': 4,
    'миасс': 4,
    'минеральные воды': 4,
    'михайловск': 4,
    'мурманск': 4,
    'набережные челны': 4,
    'нальчик': 4,
    'невинномысск': 4,
    'нефтекамск': 4,
    'нижний тагил': 4,
    'нижнекамск': 4,
    'новороссийск': 4,
    'новочебоксарск': 4,
    'новочеркасск': 4,
    'новоуральск': 4,
    'октябрьский': 4,
    'оренбург': 4,
    'орск': 4,
    'пенза': 4,
    'первоуральск': 4,
    'пермь': 4,
    'петрозаводск': 4,
    'пятигорск': 4,
    'салават': 4,
    'саранск': 4,
    'саратов': 4,
    'серов': 4,
    'снежинск': 4,
    'сочи': 4,
    'ставрополь': 4,
    'стерлитамак': 4,
    'сыктывкар': 4,
    'тюмень': 4,
    'уфа': 4,
    'чайковский': 4,
    'челябинск': 4,
    'черкесск': 4,
    'чусовой': 4,
    'шахты': 4,
    'элиста': 4,
    'южноуральск': 4,

    # Зона 5
    'ачинск': 5,
    'барнаул': 5,
    'белово': 5,
    'бердск': 5,
    'бийск': 5,
    'горно-алтайск': 5,
    'искитим': 5,
    'кемерово': 5,
    'киселевск': 5,
    'красноярск': 5,
    'ленинск-кузнецкий': 5,
    'междуреченск': 5,
    'новоалтайск': 5,
    'новокузнецк': 5,
    'новосибирск': 5,
    'омск': 5,
    'прокопьевск': 5,
    'рубцовск': 5,
    'северск': 5,
    'стрежевой': 5,
    'томск': 5,
    'юрга': 5,

    # Зона 6
    'абакан': 6,
    'артём': 6,
    'архангельск': 6,
    'биробиджан': 6,
    'благовещенск': 6,
    'большой камень': 6,
    'братск': 6,
    'владивосток': 6,
    'грозный': 6,
    'забайкальск': 6,
    'иркутск': 6,
    'комсомольск-на-амуре': 6,
    'корсаков': 6,
    'махачкала': 6,
    'мегион': 6,
    'нарьян-мар': 6,
    'находка': 6,
    'нефтеюганск': 6,
    'нижневартовск': 6,
    'нягань': 6,
    'советский': 6,
    'сургут': 6,
    'улан-удэ': 6,
    'уссурийск': 6,
    'ухта': 6,
    'хабаровск': 6,
    'ханты-мансийск': 6,
    'хасавюрт': 6,
    'чита': 6,
    'южно-сахалинск': 6,
    'якутск': 6,

    # Зона 7
    'магадан': 7,
    'надым': 7,
    'новый уренгой': 7,
    'норильск': 7,
    'ноябрьск': 7,
    'петропавловск-камчатский': 7,
    'елизово': 7,
    'салехард': 7,

    # Зона 8
    'алушта': 8,
    'евпатория': 8,
    'керчь': 8,
    'севастополь': 8,
    'симферополь': 8,
    'судак': 8,
    'феодосия': 8,
    'ялта': 8,
}

SPECIAL_CITIES_ZONE4 = {
    'альметьевск',
    'березники',
    'екатеринбург',
    'златоуст',
    'ижевск',
    'курган',
    'магнитогорск',
    'миасс',
    'набережные челны',
    'нефтекамск',
    'нижнекамск',
    'нижняя тура',
    'нижний тагил',
    'новоуральск',
    'первоуральск',
    'пермь',
    'салават',
    'серов',
    'стерлитамак',
    'тюмень',
    'уфа',
    'челябинск',
    'чусовой',
    'южноуральск'
}

SPECIAL_CITIES_ZONE5 = {
    'абакан',
    'иркутск',
    'красноярск'
}

SPECIAL_CITIES_ZONE6 = {
    'артём',
    'благовещенск',
    'владивосток',
    'комсомольск-на-амуре',
    'находка',
    'уссурийск',
    'хабаровск'
}

TARIFF_MATRIX = {
    1: {1: 1, 2: '1/1', 3: 3, 4: 4, 5: 6, 6: 8, 7: 10, 8: 12},
    2: {1: '1/1', 2: 2, 3: 2, 4: 5, 5: 7, 6: 9, 7: 11, 8: 12},
    3: {1: 3, 2: 2, 3: 2, 4: 5, 5: 7, 6: 9, 7: 11, 8: 13},
    4: {1: 4, 2: 5, 3: 5, 4: (1, 5), 5: (4, 7), 6: 9, 7: 11, 8: 6},
    5: {1: 6, 2: 7, 3: 7, 4: (4, 7), 5: 1, 6: (5, 9), 7: 11, 8: 7},
    6: {1: 8, 2: 9, 3: 9, 4: 9, 5: 9, 6: (1, 9), 7: 11, 8: 8},
    7: {1: 10, 2: 11, 3: 11, 4: 11, 5: 11, 6: 11, 7: 11, 8: 10},
    8: {1: 12, 2: 12, 3: 13, 4: 6, 5: 7, 6: 8, 7: 10, 8: 2},
}

TARIFF_TABLE = {
    0: {'pickup': (165, 23), 'courier': (353, 30)},
    1: {'pickup': (233, 30), 'courier': (443, 38)},
    '1/1': {'pickup': (188, 23), 'courier': (398, 30)},
    2: {'pickup': (248, 41), 'courier': (458, 48)},
    3: {'pickup': (248, 33), 'courier': (458, 41)},
    4: {'pickup': (263, 53), 'courier': (473, 60)},
    5: {'pickup': (398, 60), 'courier': (608, 68)},
    6: {'pickup': (495, 165), 'courier': (705, 173)},
    7: {'pickup': (593, 180), 'courier': (803, 188)},
    8: {'pickup': (675, 225), 'courier': (885, 233)},
    9: {'pickup': (773, 248), 'courier': (983, 255)},
    10: {'pickup': (1035, 360), 'courier': (1245, 368)},
    11: {'pickup': (1088, 390), 'courier': (1298, 398)},
    12: {'pickup': (443, 98), 'courier': (653, 105)},
    13: {'pickup': (473, 113), 'courier': (683, 120)},
}


def get_city_zone(city_name):
    return CITY_ZONES.get(city_name.strip().lower(), None)


def determine_tariff_zone(from_zone, to_zone, from_city, to_city):
    zone_info = TARIFF_MATRIX[from_zone][to_zone]

    if isinstance(zone_info, tuple):
        if from_zone == 4 and to_zone == 4:
            return zone_info[0] if from_city in SPECIAL_CITIES_ZONE4 else zone_info[1]
        elif from_zone == 4 and to_zone == 5:
            return zone_info[0] if from_city in SPECIAL_CITIES_ZONE4 else zone_info[1]
        elif from_zone == 5 and to_zone == 6:
            return zone_info[0] if from_city in SPECIAL_CITIES_ZONE5 else zone_info[1]
        elif from_zone == 6 and to_zone == 6:
            return zone_info[0] if from_city in SPECIAL_CITIES_ZONE6 else zone_info[1]
        else:
            return zone_info[0]
    return zone_info


def calculate_shipping_cost(tariff_zone, delivery_method, total_weight):
    method_key = 'courier' if delivery_method == 'Курьером' else 'pickup'

    base_price, per_kg = TARIFF_TABLE.get(tariff_zone, {}).get(method_key, (0, 0))

    if total_weight <= 1:
        return Decimal(base_price)
    else:
        extra_kg = total_weight - 1
        return Decimal(base_price + (extra_kg * per_kg))


# Функция Заглушка имитирующая запросы на https://api.cdek.ru/v2/calculator/tariff
def get_cdek_shipping_cost(warehouse_city, delivery_city, group_weight, delivery_method):
    # Определение зон
    from_zone = get_city_zone(warehouse_city)
    to_zone = get_city_zone(delivery_city)
    if from_zone is None or to_zone is None:
        return

    try:
        # Для внутригородских доставок
        if warehouse_city == delivery_city:
            tariff_zone = 0
        else:
            # Определение тарифной зоны
            tariff_zone = determine_tariff_zone(
                from_zone,
                to_zone,
                warehouse_city,
                delivery_city
            )
    except Exception:
        return

    try:
        # Расчет стоимости доставки для группы
        delivery_cost = calculate_shipping_cost(
            tariff_zone,
            delivery_method,
            group_weight
        )
    except Exception:
        return

    return Decimal(delivery_cost)
